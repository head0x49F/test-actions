name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
    - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GCE_INSTANCE: cos-test  
  GCE_INSTANCE_ZONE: us-central1-a 
  TAG: ${{ github.sha }}
jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:

      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: flake8 Lint
        uses: py-actions/flake8@v2

  setup-build-publish:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    needs: lint

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Configure firewall
    - name: Firewall rule
      run: |-
          gcloud compute --project=$PROJECT_ID firewall-rules create tcp-rule \
          --direction=INGRESS --priority=1000 --network=default --action=ALLOW \
          --rules=tcp:22,tcp:80,tcp:5000 --source-ranges=0.0.0.0/0    

    # Build the Docker image
    - name: Build
      run: |-
        docker build --tag gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$TAG .
    
    
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$TAG
    
   
    # Deploy container on VM instance
  deploy:
      name: Deploy container
      runs-on: ubuntu-latest
      needs: setup-build-publish

      steps:
      - name: Authenticate to Google Cloud again
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
    
    # Deploy, actually...    
      - name: Deploy
        id: creation  
        run: |-
          gcloud compute instances create-with-container  $GCE_INSTANCE \
          --zone $GCE_INSTANCE_ZONE \
          --container-image gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$TAG \
          && docker run helloworld





      - name: Update container if already exists
        id: update
        if: ${{ failure() || steps.creation.conclusion == 'failure' }}
        run: |-
          gcloud compute instances update-container $GCE_INSTANCE \
          --zone $GCE_INSTANCE_ZONE \
          --container-image gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$TAG \

      - name: Clean Contaner Registry
        if: ${{ success() || steps.update.conclusion == 'success' }}
        run: |-
          gcloud container images list-tags gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$TAG  \
          --filter="timestamp.date('%Y-%m-%d', Z)<'2022-08-01'" \
          --format="get(digest)" --limit=999999 |  \
          awk '{print "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$TAG @" $1}' | \
          xargs gcloud container images delete --force-delete-tags --quiet







